<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git Diff | Lane's Blog]]></title>
  <link href="http://chenlu0201.github.io/blog/categories/git-diff/atom.xml" rel="self"/>
  <link href="http://chenlu0201.github.io/"/>
  <updated>2015-03-15T14:37:46+08:00</updated>
  <id>http://chenlu0201.github.io/</id>
  <author>
    <name><![CDATA[Chen Lu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Diff介绍]]></title>
    <link href="http://chenlu0201.github.io/blog/2015/02/02/introduction-of-git-diff/"/>
    <updated>2015-02-02T00:14:54+08:00</updated>
    <id>http://chenlu0201.github.io/blog/2015/02/02/introduction-of-git-diff</id>
    <content type="html"><![CDATA[<p>在我们使用VCS时，相信大家最常使用的应该是diff命令了。我们需要比较当前修改了什么，某次提交修改了什么，不同提交之间的差异是什么等各种比较。在使用Git时，也不例外。本文将介绍在Git中怎样使用Git diff，以及它的一些特殊使用方法。</p>

<h2>Git diff命令的几种形式</h2>

<ul>
<li><p>git diff</p>

<p>比较工作路径和索引中文件的区别。他将显示工作路径下需要添加至索引中的内容。</p></li>
<li><p>git diff commit</p>

<p>比较工作路径和指定提交之间的区别。</p></li>
<li><p>git diff -&#45;cached commit</p>

<p>比较添加至索引的内容和指定提交之间的区别。</p></li>
<li><p>git diff commit commit</p>

<p>比较任意指定的两个提交之间的区别。</p></li>
</ul>


<p><em>通过下图我们将对以上命令的使用有更直观的了解：</em></p>

<p><img class="center" src="/images/post20150202/git-diff.jpg" title="&lsquo;git diff commands&rsquo;" ></p>

<h2>git diff使用的参数</h2>

<ul>
<li><p>&ndash;M</p>

<p>只检测重命名的文件。</p></li>
<li><p>-w or &ndash;ignore-all-space</p>

<p>忽略空白字符比较。</p></li>
<li><p>&ndash;stat</p>

<p>在比较结果中添加统计信息，例如修改行数、添加行数、删除行数。</p></li>
<li><p>&ndash;color</p>

<p>对diff结果进行着色，不同类型修改会用不同的颜色来显示。</p></li>
</ul>


<h2>git diff与git log的区别</h2>

<p><code>git diff branchA branchB</code>和<code>git diff branchA..brancheB</code>等价，比较两个分支之间的差异。<code>git log branchA..branchB</code>是显示branchB中存在，branchA中不存在的提交。</p>

<h2>使用相对提交名</h2>

<p>Git中，除了初始提交，其它的提交节点都有至少一个父亲节点。Git使用符号^用来表示父亲节点，使用符号~来表示前一个提交节点。例如，我们有名为C的分支，例如我们可以按以下规则来使用相对提交名：</p>

<p><img class="center" src="/images/post20150202/relative-commit-1.jpg" width="800" height="600" title="&lsquo;git relative commit&rsquo;" ></p>

<p>提交C有三个父节点,可以按如下方式来访问C^1, C^2, C^3.</p>

<p><img class="center" src="/images/post20150202/relative-commit-2.jpg" width="800" height="600" title="&lsquo;git relative commit&rsquo;" ></p>

<p>提交C的第一个父节点是C~1, 第二个父节点是C~2, 第三个父节点是C~3.</p>

<p>我们可以使用<code>git diff --state master~5 master</code>来得到master分支当前与之前的第五次提交之间的diff统计数据。以上就是git diff命令使用的简要介绍。</p>
]]></content>
  </entry>
  
</feed>
